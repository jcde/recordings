{"version":3,"sources":["src/components/MaterialButtonShare.js","src/screens/RecordingViewStyle.tsx","src/components/PlaySlider.js","src/index.js","src/App.tsx","src/screens/RecordingView.tsx","src/components/CupertinoFooter.js","src/components/MaterialCardWithoutImage.js","src/components/MaterialChipWithCloseButton.js","src/components/PlaySliderSaved.js","src/screens/Untitled.js","src/assets/fonts/roboto-regular.ttf","src/assets/fonts/MaterialCommunityIcons.ttf"],"names":["styles","StyleSheet","create","container","alignItems","justifyContent","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","minWidth","minHeight","icon","color","fontSize","alignSelf","iconDisabled","props","TouchableOpacity","style","onPress","disabled","name","iconStyle","footer","recordButtonRow","flexDirection","marginTop","marginBottom","recordButton","trackRow","marginLeft","marginRight","trackSliderRow","trackSlider","minimumTrackTintColor","startCard","flex","borderWidth","shadowBlur","_getMMSSFromMillis","millis","totalSeconds","seconds","Math","floor","padWithZero","number","string","toString","trackText","margin","playStatus","recordingDuration","iconName","display","title","position","left","zIndex","trackHeight","thumbSize","maximumTrackTintColor","value","durationMillis","positionMillis","Text","duration","isNaN","isFinite","_getPlaybackTimestamp","AppRegistry","registerComponent","appName","App","runApplication","rootTag","document","getElementById","StackNavigation","createDrawerNavigator","RecordingView","Untitled","createStackNavigator","headerMode","AppContainer","createAppContainer","loadResourcesAsync","async","Promise","all","Font","loadAsync","require","handleLoadingError","error","console","warn","useState","isLoadingComplete","setLoadingComplete","startAsync","onError","onFinish","handleFinishLoading","DISABLED_OPACITY","haveRecordingPermissions","setHaveRecordingPermissions","isLoading","setIsLoading","recording","setRecording","isRecording","setIsRecording","setRecordingDuration","sound","setSound","recordings","setRecordings","isPlaybackAllowed","setIsPlaybackAllowed","dialogAsk","setDialogAsk","dialogAskInputRef","useRef","rate","isMuted","volume","shouldCorrectPitch","setPlayStatus","isPlaying","setIsPlaying","useEffect","Permissions","askAsync","AUDIO_RECORDING","response","status","cancelSound","_stopPlaybackAndBeginRecording","_stopPlaying","_stopRecording","Audio","setAudioModeAsync","allowsRecordingIOS","interruptionModeIOS","INTERRUPTION_MODE_IOS_DO_NOT_MIX","playsInSilentModeIOS","shouldDuckAndroid","interruptionModeAndroid","INTERRUPTION_MODE_ANDROID_DO_NOT_MIX","playThroughEarpieceAndroid","staysActiveInBackground","newRecording","Recording","prepareToRecordAsync","RECORDING_OPTIONS_PRESET_LOW_QUALITY","setOnRecordingStatusUpdate","_updateScreenForRecordingStatus","canRecord","isDoneRecording","_stopRecordingAndEnablePlayback","stopAndUnloadAsync","code","log","message","unload","setOnPlaybackStatusUpdate","unloadAsync","Platform","OS","getURI","FileSystem","getInfoAsync","info","JSON","stringify","createNewLoadedSoundAsync","isLooping","_updateScreenForSoundStatus","newSound","isLoaded","_defaultTitle","saved","length","View","opacity","maxWidth","h","index","redraw","souncWas","pauseAsync","playAsync","textAlign","Container","visible","onBackdropPress","Title","Description","Input","placeholder","textInputRef","Button","label","input","current","btnWrapper1","btn1Caption","btn2Caption","btn3Caption","icon2","btnWrapper4","btnWrapper3","CupertinoFooter","active","btnWrapper2","icon1","icon3","btn4Caption","backgroundColor","paddingTop","borderColor","flexWrap","overflow","bodyContent","padding","titleStyle","paddingBottom","subtitleStyle","lineHeight","body","bodyText","actionBody","actionButton1","actionText1","actionButton2","actionText2","children","paddingLeft","chipText","rec","splice","module","exports"],"mappings":"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","file":"static/js/app.32ff9307.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\nimport Icon from \"react-native-vector-icons/MaterialCommunityIcons\";\n\nfunction MaterialButtonShare(props) {\n  return (\n    <TouchableOpacity style={[styles.container, props.style]}\n      onPress={props.onPress} disabled={props.disabled}>\n      <Icon name={props.icon || \"share-variant\"}\n        style={[props.disabled ? styles.iconDisabled : styles.icon, props.iconStyle]}></Icon>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 28,\n    shadowColor: \"#111\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 1.2,\n    elevation: 2,\n    minWidth: 40,\n    minHeight: 40\n  },\n  icon: {\n    color: \"rgba(255,108,134,1)\",\n    fontSize: 24,\n    alignSelf: \"center\"\n  },\n  iconDisabled: {\n    color: \"rgba(255,108,134,.5)\",\n    fontSize: 24,\n    alignSelf: \"center\"\n  },\n});\n\nexport default MaterialButtonShare;\n","import { StyleSheet } from \"react-native\";\n\nconst styles = StyleSheet.create({\n  footer: {\n    height: 49,\n    width: 375,\n  },\n  recordButtonRow: {\n    height: 100,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  recordButton: {\n    borderRadius: 50,\n    height: 100,\n    width: 100,\n    shadowColor: \"rgba(255,108,134,1)\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    elevation: 30,\n    shadowOpacity: 1,\n    shadowRadius: 20\n  },\n\n  trackRow: {\n    height: 40,\n    marginBottom: 4,\n    marginLeft: 10,\n    marginRight: 10,\n    flexDirection: \"row\",\n    justifyContent: 'flex-end',\n  },\n\n  trackSliderRow: {\n    height: 40,\n    flexDirection: \"row\",\n  },\n  trackSlider: {\n    width: 147,\n    height: 30,\n    marginTop: 5,\n    minimumTrackTintColor: 'green',\n  },\n\n  startCard: {\n    flex: 1,\n    width: 300,\n    borderWidth: 0,\n    borderRadius: 20,\n    shadowColor: \"rgba(255,108,134,1)\",\n    shadowOffset: {\n      width: 30,\n      height: 35,\n      shadowBlur: 40,\n    },\n    elevation: 30,\n  },\n\n});\n\nexport default styles;","import React, { Component } from \"react\";\nimport { View, Text, Platform } from \"react-native\";\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\nimport ChipWithButton from \"../components/MaterialChipWithCloseButton\";\nimport Slider from \"@react-native-community/slider\";\n\nexport const _getMMSSFromMillis = (millis: number) => {\n  const totalSeconds = millis / 1000;\n  const seconds = Math.floor(totalSeconds % 60);\n  const minutes = Math.floor(totalSeconds / 60);\n  const padWithZero = (number) => {\n    const string = number.toString();\n    if (number < 10) {\n      return \"0\" + string;\n    }\n    return string;\n  };\n  return padWithZero(minutes) + \":\" + padWithZero(seconds);\n}\n\nfunction PlaySlider(props) {\n  const { playStatus, recordingDuration } = props\n  const _getSeekSliderPosition = () => {\n    if (\n      //sound != null &&\n      playStatus.durationMillis != null &&\n      playStatus.positionMillis != null\n    ) {\n      return playStatus.positionMillis / playStatus.durationMillis;\n    }\n    return 0;\n  }\n  const _getPlaybackTimestamp = () => {\n    let duration = (isNaN(playStatus.durationMillis)\n      || !isFinite(playStatus.durationMillis))\n      ? recordingDuration : playStatus.durationMillis\n    if (\n      //sound != null &&\n      playStatus.positionMillis != null\n      && !isNaN(duration)\n      && duration > 0\n    ) {\n      return `${_getMMSSFromMillis(\n        playStatus.positionMillis\n      )} / ${_getMMSSFromMillis(duration)}`;\n    }\n    return \"\";\n  }\n\n  return (<>\n    <ChipWithButton iconName=\"close\" iconStyle={{ display: 'none' }} title={props.title} >\n      <Slider style={{\n        position: 'absolute', left: 0, zIndex: -1,\n        width: '100%',\n      }}\n        trackHeight={40} thumbSize={0}\n        minimumTrackTintColor={'#bbdece'}\n        maximumTrackTintColor={'transparent'}\n        value={_getSeekSliderPosition()}\n        //onSlidingComplete={_onSeekSliderSlidingComplete}\n        disabled={props.disabled}\n      />\n    </ChipWithButton>\n    <Text style={styles.trackText}>{_getPlaybackTimestamp()}</Text>\n  </>)\n}\n\nconst styles = StyleSheet.create({\n  trackText: {\n    minWidth: 80,\n    margin: 5,\n    alignSelf: 'center',\n  },\n});\n\nexport default PlaySlider;\n","import { AppRegistry } from 'react-native';\r\nimport App from './App';\r\nimport { name as appName } from './app.json';\r\n\r\nAppRegistry.registerComponent(appName, () => App);\r\nAppRegistry.runApplication(appName, {\r\n  rootTag: document.getElementById('root'),\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { createAppContainer } from \"react-navigation\";\r\nimport { createStackNavigator } from \"react-navigation-stack\";\r\nimport { createDrawerNavigator } from \"react-navigation-drawer\";\r\nimport AppLoading from \"expo-app-loading\";\r\n\r\nimport * as Font from \"expo-font\";\r\nimport RecordingView from \"./screens/RecordingView\";\r\n//import RecordingView from \"./components/RecordingViewOriginal\";\r\nimport Untitled from \"./screens/Untitled\";\r\n\r\nconst DrawerNavigation = createDrawerNavigator({\r\n  RecordingView: RecordingView,\r\n  Untitled: Untitled\r\n});\r\n\r\nconst StackNavigation = createStackNavigator(\r\n  {\r\n    /*DrawerNavigation: {\r\n      screen: DrawerNavigation\r\n    },*/\r\n    RecordingView: RecordingView,\r\n    Untitled: Untitled\r\n  },\r\n  {\r\n    headerMode: \"none\"\r\n  }\r\n);\r\n\r\nconst AppContainer = createAppContainer(StackNavigation);\r\n\r\nfunction App() {\r\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\r\n  if (!isLoadingComplete) {\r\n    return (\r\n      <AppLoading\r\n        startAsync={loadResourcesAsync}\r\n        onError={handleLoadingError}\r\n        onFinish={() => handleFinishLoading(setLoadingComplete)}\r\n      />\r\n    );\r\n  } else {\r\n    return isLoadingComplete ? <AppContainer /> : <AppLoading />;\r\n  }\r\n}\r\nasync function loadResourcesAsync() {\r\n  await Promise.all([\r\n    Font.loadAsync({\r\n      \"roboto-regular\": require(\"./assets/fonts/roboto-regular.ttf\")\r\n    }),\r\n    Font.loadAsync({\r\n      \"MaterialCommunityIcons\": require(\"./assets/fonts/MaterialCommunityIcons.ttf\")\r\n    })\r\n  ]);\r\n}\r\nfunction handleLoadingError(error) {\r\n  console.warn(error);\r\n}\r\n\r\nfunction handleFinishLoading(setLoadingComplete) {\r\n  setLoadingComplete(true);\r\n}\r\n\r\nexport default App; ","import React, { useState, useEffect, useContext, useReducer, useRef } from 'react'\nimport { View, Text, Platform } from \"react-native\";\nimport * as Permissions from \"expo-permissions\";\nimport CupertinoFooter from \"../components/CupertinoFooter\";\nimport ButtonShare from \"../components/MaterialButtonShare\";\nimport MaterialCardWithoutImage from \"../components/MaterialCardWithoutImage\";\nimport Dialog from \"react-native-dialog\";\n\nimport { Audio, AVPlaybackStatus } from \"expo-av\";\nimport styles from './RecordingViewStyle';\nimport PlaySlider, { _getMMSSFromMillis } from '../components/PlaySlider';\nimport PlaySliderSaved from '../components/PlaySliderSaved';\n\ninterface IRecording {\n  title: string\n  sound: any\n  playStatus: AVPlaybackStatus\n  isPlaying: boolean\n}\n\nfunction RecordingView(props) {\n  const [haveRecordingPermissions, setHaveRecordingPermissions] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n\n  // Audio.Recording, check if == null\n  const [recording, setRecording] = useState(null)\n  // needed because recording may be in status Done\n  const [isRecording, setIsRecording] = useState(false)\n  const [recordingDuration, setRecordingDuration] = useState(null)\n\n  // recording is converted in sound\n  const [sound, setSound] = useState(null)\n  // sound is saved in recordings with title\n  const [isSoundTitled, setIsSoundTitled] = useState(false)\n  // IRecording[]\n  const [recordings, setRecordings] = useState([])\n\n  // sound some time is not allowed to play\n  const [isPlaybackAllowed, setIsPlaybackAllowed] = useState(false)\n\n  const [dialogAsk, setDialogAsk] = useState(0)\n  const dialogAskInputRef = useRef(null);\n\n  const [playStatus, setPlayStatus] = useState({\n    durationMillis: null, // soundDuration\n    positionMillis: null, // soundPosition\n    //shouldPlay: false,\n    rate: 1.0,\n    isMuted: false,\n    volume: 1.0,\n    shouldCorrectPitch: true,\n    error: null,\n  })\n  // playStatus.isPlaying == false in the end of loop\n  const [isPlaying, setIsPlaying] = useState(false)\n  //const [isSeeking, setIsSeeking] = useState(null)\n\n  useEffect(async () => {\n    const response = await Permissions.askAsync(Permissions.AUDIO_RECORDING);\n    setHaveRecordingPermissions(response.status === \"granted\")\n  }, [])\n\n  const _onRecordPressed = async () => {\n    if (recording) {\n      _stopRecordingAndEnablePlayback()\n      setDialogAsk(1)\n    } else {\n      if (sound) {\n        if (isPlaying) {\n          sound.pauseAsync()\n          setIsPlaying(false)\n        }\n        setDialogAsk(2)\n      } else\n        _stopPlaybackAndBeginRecording()\n    }\n  };\n  // when there is no sound or sound is not saved\n  const _onDeletePressed = async () => {\n    if (sound)\n      _stopPlaying()\n    else\n      await _stopRecording()\n  }\n  const cancelSound = () => {\n    if (dialogAsk == 2) {\n      _stopPlaybackAndBeginRecording()\n    }\n    setDialogAsk(0)\n  };\n  const saveSound = () => {\n    let input = dialogAskInputRef.current\n    playStatus.durationMillis = recordingDuration\n    const newRecording: IRecording = {\n      title: input.value != '' ? input.value : _defaultTitle(true),\n      sound,\n      playStatus: playStatus,\n      isPlaying: false,\n    }\n    setRecordings([newRecording, ...recordings])\n\n    _stopPlaying(false)\n    setDialogAsk(0)\n  };\n\n\n  const _stopPlaybackAndBeginRecording = async () => {\n    setIsLoading(true)\n    _stopPlaying()\n    await _stopRecording()\n    await Audio.setAudioModeAsync({\n      allowsRecordingIOS: true,\n      interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\n      playsInSilentModeIOS: true,\n      shouldDuckAndroid: true,\n      interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX,\n      playThroughEarpieceAndroid: false,\n      staysActiveInBackground: true,\n    });\n\n    const newRecording = new Audio.Recording();\n    await newRecording.prepareToRecordAsync(Audio.RECORDING_OPTIONS_PRESET_LOW_QUALITY);\n    newRecording.setOnRecordingStatusUpdate(_updateScreenForRecordingStatus);\n\n    setRecording(newRecording);\n    await newRecording.startAsync(); // Will call this._updateScreenForRecordingStatus to update the screen.\n    setIsLoading(false);\n  }\n\n  const _updateScreenForRecordingStatus = (status: Audio.RecordingStatus) => {\n    if (status.canRecord) {\n      setIsRecording(status.isRecording)\n      setRecordingDuration(status.durationMillis)\n    } else if (status.isDoneRecording) {\n      setIsRecording(false)\n      setRecordingDuration(status.durationMillis)\n      if (!isLoading) {\n        _stopRecordingAndEnablePlayback();\n      }\n    }\n  };\n  const _stopRecording = async () => {\n    if (recording) {\n      recording.setOnRecordingStatusUpdate(null)\n      try {\n        await recording.stopAndUnloadAsync();\n      } catch (error) {\n        // On Android, calling stop before any data has been collected results in\n        // an E_AUDIO_NODATA error. This means no audio data has been written to\n        // the output file is invalid.\n        if (error.code === \"E_AUDIO_NODATA\") {\n          console.log(\n            `Stop was called too quickly, no data has yet been received (${error.message})`\n          );\n        } else {\n          console.log(\"STOP ERROR: \", error.code, error.name, error.message);\n        }\n        setIsLoading(false)\n      } finally {\n        setRecording(null)\n      }\n    }\n    setIsRecording(false)\n    // value will be used  setRecordingDuration(null)\n  }\n  const _stopPlaying = async (unload = true) => {\n    if (sound) {\n      if (unload) {\n        sound.setOnPlaybackStatusUpdate(null)\n        await sound.unloadAsync()\n      }\n      setSound(null)\n    }\n    setIsPlaying(false)\n    setIsPlaybackAllowed(false)\n  }\n\n  const _stopRecordingAndEnablePlayback = async () => {\n    if (!recording) {\n      return;\n    }\n    setIsLoading(true)\n    _stopPlaying()\n    await _stopRecording() // here setRecording(null)\n\n    if (Platform.OS == 'web') {\n      console.log(`FILE URL: ${recording.getURI()}`);\n    }\n    else {\n      const info = await FileSystem.getInfoAsync(recording.getURI() || \"\");\n      console.log(`FILE INFO: ${JSON.stringify(info)}`);\n    }\n    await Audio.setAudioModeAsync({\n      allowsRecordingIOS: false,\n      interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\n      playsInSilentModeIOS: true,\n      shouldDuckAndroid: true,\n      interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX,\n      playThroughEarpieceAndroid: false,\n      staysActiveInBackground: true,\n    });\n    const { sound: newSound, status } = await recording.createNewLoadedSoundAsync(\n      {\n        isLooping: true,\n        isMuted: playStatus.isMuted,\n        volume: playStatus.volume,\n        rate: playStatus.rate,\n        shouldCorrectPitch: playStatus.shouldCorrectPitch,\n        //progressUpdateIntervalMillis: 50,\n      },\n      _updateScreenForSoundStatus\n    );\n    setSound(newSound);\n\n    setIsLoading(false);\n\n    return newSound\n  }\n\n  // called during playback as well, but not for every tick\n  const _updateScreenForSoundStatus = (status: AVPlaybackStatus) => {\n    if (status.isLoaded) {\n      setPlayStatus(status)\n      setIsPlaybackAllowed(true)\n    } else {\n      setPlayStatus({\n        durationMillis: null,\n        positionMillis: null,\n      })\n      setIsPlaybackAllowed(false)\n      if (status.error) {\n        console.log(`FATAL PLAYER ERROR: ${status.error}`);\n      }\n    }\n  };\n\n\n  const _getRecordingTimestamp = () => {\n    return `${_getMMSSFromMillis((isRecording && recordingDuration) ? recordingDuration : 0)}`;\n  }\n\n\n\n  const _onSeekSliderSlidingComplete = async (value: number) => {\n    /*if (sound != null) {\n      setIsSeeking(false);\n      const seekPosition = value * (playStatus.durationMillis || 0);\n      if (shouldPlayAtEndOfSeek) {\n        sound.playFromPositionAsync(seekPosition);\n      } else {\n        sound.setPositionAsync(seekPosition);\n      }\n    }*/\n  };\n  const _onPlayPausePressed0 = async () => {\n    let souncWas = sound ?? await _stopRecordingAndEnablePlayback()\n\n    if (isPlaying) {\n      souncWas.pauseAsync();\n    } else {\n      souncWas.playAsync();\n    }\n    setIsPlaying(!isPlaying)\n  };\n\n  const _defaultTitle = (saved = false) => {\n    return `${saved ? 'New' : 'Unsaved'} recording ${recordings.length + 1}`\n  }\n\n  if (!haveRecordingPermissions) {\n    return (\n      <View style={styles.container}>\n        <View />\n        <Text style={{ textAlign: \"center\" }}\n        >\n          You must enable audio recording permissions in order to use this\n          app.\n        </Text>\n        <View />\n      </View>\n    );\n  }\n\n  return (\n    <View style={{\n      flex: 1,\n      opacity: isLoading ? DISABLED_OPACITY : 1.0,\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      alignSelf: 'center', \n      maxWidth: 600,\n    }}>\n      <MaterialCardWithoutImage style={styles.startCard}\n        h='Record your voice'\n      >Begin by finding a relaxed position, sitting or lying down. Set aside a few minutes to relax.</MaterialCardWithoutImage>\n      {false && <MaterialCardWithoutImage style={styles.startCard}\n      >Breathe slowly inside...\n      and out...</MaterialCardWithoutImage>}\n      <View style={{\n        flex: 1, justifyContent: \"flex-end\", alignSelf: 'stretch',\n        marginLeft: 10, marginRight: 10\n      }}>\n        <PlaySliderSaved index={2} recordings={recordings} redraw={setRecordings} />\n        <PlaySliderSaved index={1} recordings={recordings} redraw={setRecordings} />\n        <PlaySliderSaved index={0} recordings={recordings} redraw={setRecordings} />\n        <View style={styles.trackRow}>\n          <ButtonShare icon={isPlaying ? \"pause-circle-outline\" : \"play-outline\"}\n            onPress={_onPlayPausePressed0}\n            disabled={!(isPlaybackAllowed || isRecording && (recordingDuration > 2000))} />\n          {sound && <PlaySlider title={_defaultTitle()}\n            disabled={isPlaybackAllowed || isLoading}\n            playStatus={playStatus} recordingDuration={recordingDuration} />}\n          {!sound &&\n            <Text style={{ flex: 1, alignSelf: 'center', textAlign: 'center', fontSize: 20 }}\n            >{_getRecordingTimestamp()}</Text>}\n          <ButtonShare icon=\"delete-outline\" disabled={!(isRecording || isPlaybackAllowed)}\n            onPress={_onDeletePressed} />\n        </View>\n      </View>\n      <View style={styles.recordButtonRow}>\n        <ButtonShare\n          icon={isRecording ? 'content-save-outline' : 'microphone-outline'}\n          style={styles.recordButton}\n          iconStyle={{ fontSize: 40 }}\n          onPress={_onRecordPressed}\n          disabled={isLoading}\n        ></ButtonShare>\n      </View>\n      <View>\n        <Dialog.Container visible={dialogAsk} onBackdropPress={cancelSound}>\n          <Dialog.Title>Save your recording</Dialog.Title>\n          <Dialog.Description>\n            TITLE\n          </Dialog.Description>\n          <Dialog.Input placeholder={_defaultTitle()} textInputRef={dialogAskInputRef}\n            style={{ fontSize: 24 }} />\n          <Dialog.Button label={dialogAsk == 2 ? 'DELETE' : 'Cancel'} onPress={cancelSound} />\n          <Dialog.Button label=\"Save\" onPress={saveSound} />\n        </Dialog.Container>\n      </View>\n      <CupertinoFooter\n        icon=\"microphone\"\n        btnWrapper1=\"RecordingView\"\n        btn1Caption=\"Record\"\n        btn2Caption=\"Listen\"\n        btn3Caption=\"Create\"\n        icon2=\"android-studio\"\n        btnWrapper4=\"Go Back\"\n        btnWrapper3=\"Go Back\"\n        style={styles.footer}\n      ></CupertinoFooter>\n    </View >\n  );\n}\n\nconst DISABLED_OPACITY = 0.5;\n\nexport default RecordingView;\n","import React, { Component } from \"react\";\nimport { StyleSheet, View, TouchableOpacity, Text } from \"react-native\";\nimport MaterialCommunityIconsIcon from \"react-native-vector-icons/MaterialCommunityIcons\";\n\nexport function CupertinoFooter(props) {\n  return (\n    <View style={[styles.container, props.style]}>\n      <TouchableOpacity\n        style={styles.btnWrapper1}\n      >\n        <MaterialCommunityIconsIcon\n          name={props.icon || \"av-timer\"}\n          style={[\n            styles.icon,\n            {\n              color: props.active ? \"#007AFF\" : \"#616161\"\n            }\n          ]}\n        ></MaterialCommunityIconsIcon>\n        <Text\n          style={[\n            styles.btn1Caption,\n            {\n              color: props.active ? \"#007AFF\" : \"#9E9E9E\"\n            }\n          ]}\n        >\n          {props.btn1Caption || \"Dashboard\"}\n        </Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={styles.btnWrapper2}>\n        <MaterialCommunityIconsIcon\n          name=\"format-list-bulleted\"\n          style={styles.icon1}\n        ></MaterialCommunityIconsIcon>\n        <Text style={styles.btn2Caption}>\n          {props.btn2Caption || \"Orderbook\"}\n        </Text>\n      </TouchableOpacity>\n      <TouchableOpacity /* Conditional navigation not supported at the moment */\n        style={styles.btnWrapper3}\n      >\n        <MaterialCommunityIconsIcon\n          name={props.icon2 || \"poll\"}\n          style={styles.icon2}\n        ></MaterialCommunityIconsIcon>\n        <Text style={styles.btn3Caption}>{props.btn3Caption || \"Stats\"}</Text>\n      </TouchableOpacity>\n      <TouchableOpacity /* Conditional navigation not supported at the moment */\n        style={styles.btnWrapper4}\n      >\n        <MaterialCommunityIconsIcon\n          name=\"credit-card\"\n          style={styles.icon3}\n        ></MaterialCommunityIconsIcon>\n        <Text style={styles.btn4Caption}>Payment</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nexport const styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"rgba(255,255,255,1)\",\n    flexDirection: \"row\",\n    width: \"100%\"\n  },\n  btnWrapper1: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  icon: {\n    backgroundColor: \"transparent\",\n    fontSize: 24,\n    opacity: 0.8\n  },\n  btn1Caption: {\n    fontSize: 12,\n    backgroundColor: \"transparent\",\n    paddingTop: 4\n  },\n  btnWrapper2: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  icon1: {\n    backgroundColor: \"transparent\",\n    color: \"#616161\",\n    fontSize: 24,\n    opacity: 0.8\n  },\n  btn2Caption: {\n    fontSize: 12,\n    color: \"#9E9E9E\",\n    backgroundColor: \"transparent\",\n    paddingTop: 4\n  },\n  btnWrapper3: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  icon2: {\n    backgroundColor: \"transparent\",\n    color: \"#616161\",\n    fontSize: 24,\n    opacity: 0.8\n  },\n  btn3Caption: {\n    fontSize: 12,\n    color: \"#9E9E9E\",\n    backgroundColor: \"transparent\",\n    paddingTop: 4\n  },\n  btnWrapper4: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  icon3: {\n    backgroundColor: \"transparent\",\n    color: \"#616161\",\n    fontSize: 24,\n    opacity: 0.8\n  },\n  btn4Caption: {\n    fontSize: 12,\n    color: \"#9E9E9E\",\n    backgroundColor: \"transparent\",\n    paddingTop: 4\n  }\n});\n\nexport default CupertinoFooter;\n","import React, { Component } from \"react\";\nimport { StyleSheet, View, Text, TouchableOpacity } from \"react-native\";\n\nfunction MaterialCardWithoutImage(props) {\n  return (\n    <View style={[styles.container, props.style]}>\n      <View style={styles.bodyContent}>\n        {props.h && <Text style={styles.titleStyle}>{props.h}</Text>}\n        {false && <Text style={styles.subtitleStyle}>Subtitle here</Text>}\n      </View>\n      <View style={styles.body}>\n        <Text style={styles.bodyText}>\n          {props.children}\n        </Text>\n      </View>\n      {false && <View style={styles.actionBody}>\n        <TouchableOpacity style={styles.actionButton1}>\n          <Text style={styles.actionText1}>ACTION 1</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={styles.actionButton2}>\n          <Text style={styles.actionText2}>ACTION 2</Text>\n        </TouchableOpacity>\n      </View>}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderWidth: 1,\n    borderRadius: 2,\n    borderColor: \"#CCC\",\n    flexWrap: \"nowrap\",\n    backgroundColor: \"#FFF\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: -2,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 1.5,\n    elevation: 3,\n    overflow: \"hidden\"\n  },\n  bodyContent: {\n    padding: 16,\n    paddingTop: 24,\n    justifyContent: \"center\"\n  },\n  titleStyle: {\n    fontSize: 24,\n    color: \"#000\",\n    paddingBottom: 12\n  },\n  subtitleStyle: {\n    fontSize: 14,\n    color: \"#000\",\n    lineHeight: 16,\n    opacity: 0.5\n  },\n  body: {\n    padding: 16,\n    paddingTop: 8\n  },\n  bodyText: {\n    lineHeight: 20,\n    fontSize: 20,\n    color: \"#424242\",\n    flexWrap: \"wrap\"\n  },\n  actionBody: {\n    padding: 8,\n    flexDirection: \"row\"\n  },\n  actionButton1: {\n    padding: 8,\n    height: 36\n  },\n  actionText1: {\n    fontSize: 14,\n    color: \"#000\",\n    opacity: 0.9\n  },\n  actionButton2: {\n    padding: 8,\n    height: 36\n  },\n  actionText2: {\n    fontSize: 14,\n    color: \"#000\",\n    opacity: 0.9\n  }\n});\n\nexport default MaterialCardWithoutImage;\n","import React, { Component } from \"react\";\nimport { StyleSheet, View, Text } from \"react-native\";\nimport Icon from \"react-native-vector-icons/MaterialCommunityIcons\";\n\nfunction MaterialChipWithCloseButton(props) {\n  return (\n    <View style={[styles.container, props.style]}>\n      <Text style={styles.chipText}>{props.title ?? 'Example Chip'}</Text>\n      <Icon\n        name={props.iconName || \"close-circle\"}\n        style={[styles.iconStyle, props.iconStyle]}\n      ></Icon>\n      {props.children}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    backgroundColor: \"rgba(224, 224, 224, 0.86)\",\n    paddingLeft: 12,\n    borderRadius: 50\n  },\n  chipText: {\n    fontSize: 13,\n    color: \"rgba(0,0,0,0.87)\"\n  },\n  iconStyle: {\n    width: 24,\n    color: \"white\",\n    fontSize: 24,\n    marginLeft: 4,\n    marginRight: 4\n  }\n});\n\nexport default MaterialChipWithCloseButton;\n","import React, { Component } from \"react\";\nimport { View, Text, Platform } from \"react-native\";\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\nimport ButtonShare from \"./MaterialButtonShare\";\nimport PlaySlider from './PlaySlider';\nimport styles from '../screens/RecordingViewStyle';\n\nfunction PlaySliderSaved(props) {\n  const { index, recordings, redraw } = props\n  const _onPlayPausePressed1 = async () => {\n    let rec = recordings[index]\n    rec.sound.setOnPlaybackStatusUpdate((status) => {\n      rec.playStatus = status\n      redraw([...recordings])\n    });\n    if (rec.playStatus.isPlaying) {\n      rec.sound.pauseAsync();\n    } else {\n      rec.sound.playAsync();\n    }\n  };\n  const _onDeletePressed1 = async () => {\n    let rec = recordings[index]\n    rec.sound.setOnPlaybackStatusUpdate(null)\n    await rec.sound.unloadAsync()\n    recordings.splice(index, 1)\n    redraw([...recordings])\n  }\n  return (<>\n    {recordings.length >= index + 1 &&\n      <View style={styles.trackRow}>\n        <ButtonShare icon={recordings[index].playStatus.isPlaying ? \"pause-circle-outline\" : \"play-outline\"}\n          onPress={_onPlayPausePressed1} />\n        <PlaySlider title={recordings[index].title}\n          playStatus={recordings[index].playStatus} />\n        <ButtonShare icon=\"delete-outline\" onPress={_onDeletePressed1} />\n      </View>}\n  </>)\n}\n\nexport default PlaySliderSaved;\n","import React, { Component } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\n\nfunction Untitled(props) {\n  return <View style={styles.container}></View>;\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\n\nexport default Untitled;\n","module.exports = __webpack_public_path__ + \"./fonts/roboto-regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/MaterialCommunityIcons.ttf\";"],"sourceRoot":""}